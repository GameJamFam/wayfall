[gd_scene load_steps=33 format=2]

[ext_resource path="res://Levels/CrabTown/crabtown.res" type="TileSet" id=1]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 1 (Intro)/B_SoftEdge.tres" type="Texture" id=2]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 1 (Intro)/Entrance.tres" type="Texture" id=3]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 1 (Intro)/1_BG.tres" type="Texture" id=4]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 1 (Intro)/6_W_CH.tres" type="Texture" id=5]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 1 (Intro)/2_BlackOverlay.tres" type="Texture" id=6]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 1 (Intro)/4_BoneBG_Mid.tres" type="Texture" id=7]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 1 (Intro)/3_BoneBG_Far.tres" type="Texture" id=8]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 1 (Intro)/5_BoneBG_Close.tres" type="Texture" id=9]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 2 (Shark)/B_Edge.tres" type="Texture" id=10]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 3 (Small Dome)/B_Edge.tres" type="Texture" id=11]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 2 (Shark)/3_eyes.tres" type="Texture" id=12]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 2 (Shark)/5_W_ring.tres" type="Texture" id=13]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 2 (Shark)/1_W_CH.tres" type="Texture" id=14]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 2 (Shark)/4_B_CH.tres" type="Texture" id=15]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 2 (Shark)/2_W.tres" type="Texture" id=16]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 4 (Bonehead)/8_Skull.tres" type="Texture" id=17]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 4 (Bonehead)/1_Bone.tres" type="Texture" id=18]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 4 (Bonehead)/2_Baleen.tres" type="Texture" id=19]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 4 (Bonehead)/7_UpperSand.tres" type="Texture" id=20]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 4 (Bonehead)/3_Baleen.tres" type="Texture" id=21]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 4 (Bonehead)/5_W_CH.tres" type="Texture" id=22]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 4 (Bonehead)/B_Edge-4.tres" type="Texture" id=23]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 4 (Bonehead)/6_B_BG.tres" type="Texture" id=24]
[ext_resource path="res://Levels/CrabTown/carbtown-backgrounds.sprites/Room 4 (Bonehead)/4_Baleen.tres" type="Texture" id=25]
[ext_resource path="res://Levels/DoorTeleport.tscn" type="PackedScene" id=26]
[ext_resource path="res://NPC/TalkingNPCs/Crabs/King_Rathbuni.tscn" type="PackedScene" id=27]
[ext_resource path="res://Map/MapToggler.tscn" type="PackedScene" id=28]

[sub_resource type="Shader" id=1]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : hint_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/angle = -0.3
shader_param/position = -0.2
shader_param/spread = 1.0
shader_param/cutoff = -1.0
shader_param/falloff = 1.0
shader_param/edge_fade = 1.0
shader_param/speed = 0.439
shader_param/ray1_density = 20.0
shader_param/ray2_density = 20.0
shader_param/ray2_intensity = 0.0
shader_param/color = Color( 1, 1, 1, 0.8 )
shader_param/hdr = false
shader_param/seed = 5.0

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;

void fragment(){
	
	vec4 color = vec4(texture(SCREEN_TEXTURE, SCREEN_UV).rgb, texture(TEXTURE, UV).a);
	
	COLOR = vec4(1.0 - color.rgb,  color.a);
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )

[node name="L_CrabTown" type="Node2D"]
position = Vector2( 1, 0 )
scale = Vector2( 2.5, 2.5 )

[node name="Backlground" type="Node2D" parent="."]
scale = Vector2( 2.07, 2.07 )

[node name="Room1" type="Node2D" parent="Backlground"]
position = Vector2( 18.1643, 1.93237 )

[node name="1Bg" type="Sprite" parent="Backlground/Room1"]
position = Vector2( 417.783, 56.6353 )
texture = ExtResource( 4 )

[node name="2BlackOverlay" type="Sprite" parent="Backlground/Room1"]
position = Vector2( 417.783, 56.6353 )
texture = ExtResource( 6 )

[node name="3BoneBgFar" type="Sprite" parent="Backlground/Room1"]
position = Vector2( 417.783, 56.6353 )
texture = ExtResource( 8 )

[node name="4BoneBgMid" type="Sprite" parent="Backlground/Room1"]
position = Vector2( 417.783, 56.6353 )
texture = ExtResource( 7 )

[node name="5BoneBgClose" type="Sprite" parent="Backlground/Room1"]
position = Vector2( 417.783, 56.6353 )
texture = ExtResource( 9 )

[node name="6WCh" type="Sprite" parent="Backlground/Room1"]
position = Vector2( 417.783, 56.6353 )
texture = ExtResource( 5 )

[node name="Entrance" type="Sprite" parent="Backlground/Room1"]
position = Vector2( -20.4385, 236.715 )
scale = Vector2( 1.26302, 1.26302 )
texture = ExtResource( 3 )

[node name="BSoftEdge" type="Sprite" parent="Backlground/Room1"]
position = Vector2( 418.358, 78.4541 )
texture = ExtResource( 2 )

[node name="Room2" type="Node2D" parent="Backlground"]
position = Vector2( 886.57, -263.768 )
scale = Vector2( 0.2, 0.2 )

[node name="1WCh" type="Sprite" parent="Backlground/Room2"]
position = Vector2( 791.498, -200.966 )
scale = Vector2( 2, 2 )
texture = ExtResource( 14 )

[node name="2W" type="Sprite" parent="Backlground/Room2"]
position = Vector2( 791.498, -200.966 )
scale = Vector2( 2, 2 )
texture = ExtResource( 16 )

[node name="3Eyes" type="Sprite" parent="Backlground/Room2"]
position = Vector2( 791.498, -200.966 )
scale = Vector2( 2, 2 )
texture = ExtResource( 12 )

[node name="4BCh" type="Sprite" parent="Backlground/Room2"]
position = Vector2( 791.498, -200.966 )
scale = Vector2( 2, 2 )
texture = ExtResource( 15 )

[node name="5WRing" type="Sprite" parent="Backlground/Room2"]
position = Vector2( 791.498, -200.966 )
scale = Vector2( 2, 2 )
texture = ExtResource( 13 )

[node name="BEdge" type="Sprite" parent="Backlground/Room2"]
position = Vector2( 863.675, -2531.06 )
scale = Vector2( 1.85, 1.85 )
texture = ExtResource( 10 )
offset = Vector2( -69.3011, 1254.5 )

[node name="Room3" type="Node2D" parent="Backlground"]
position = Vector2( 73.2367, 85.6039 )

[node name="2BlackOverlay" type="Sprite" parent="Backlground/Room3"]
position = Vector2( 1197.38, -7.24638 )
texture = ExtResource( 6 )

[node name="3BoneBgFar" type="Sprite" parent="Backlground/Room3"]
position = Vector2( 1197.38, -7.24638 )
texture = ExtResource( 8 )

[node name="4BoneBgMid" type="Sprite" parent="Backlground/Room3"]
position = Vector2( 1197.38, -7.24638 )
texture = ExtResource( 7 )

[node name="5BoneBgClose" type="Sprite" parent="Backlground/Room3"]
position = Vector2( 1197.38, -7.24638 )
texture = ExtResource( 9 )

[node name="6WCh" type="Sprite" parent="Backlground/Room3"]
position = Vector2( 1197.38, -7.24638 )
texture = ExtResource( 5 )

[node name="BEdge" type="Sprite" parent="Backlground/Room3"]
position = Vector2( 1263.19, -41.1594 )
texture = ExtResource( 11 )

[node name="Room4" type="Node2D" parent="Backlground"]
position = Vector2( 143.768, -100.87 )

[node name="1Bone" type="Sprite" parent="Backlground/Room4"]
position = Vector2( 1826.86, -185.121 )
texture = ExtResource( 18 )

[node name="2Baleen" type="Sprite" parent="Backlground/Room4"]
position = Vector2( 1826.86, -185.121 )
texture = ExtResource( 19 )

[node name="3Baleen" type="Sprite" parent="Backlground/Room4"]
position = Vector2( 1826.86, -185.121 )
texture = ExtResource( 21 )

[node name="4Baleen" type="Sprite" parent="Backlground/Room4"]
position = Vector2( 1865.26, -315.503 )
texture = ExtResource( 25 )

[node name="5WCh" type="Sprite" parent="Backlground/Room4"]
position = Vector2( 1826.86, -185.121 )
texture = ExtResource( 22 )

[node name="6BBg" type="Sprite" parent="Backlground/Room4"]
position = Vector2( 1826.86, -185.121 )
texture = ExtResource( 24 )

[node name="7UpperSand" type="Sprite" parent="Backlground/Room4"]
position = Vector2( 1826.86, -185.121 )
texture = ExtResource( 20 )

[node name="8Skull" type="Sprite" parent="Backlground/Room4"]
position = Vector2( 1826.86, -185.121 )
texture = ExtResource( 17 )

[node name="BEdge-4" type="Sprite" parent="Backlground/Room4"]
position = Vector2( 1826.86, -185.121 )
texture = ExtResource( 23 )

[node name="King_Rathbuni" parent="Backlground" instance=ExtResource( 27 )]
position = Vector2( 645.411, -177.971 )

[node name="MapToggler" parent="Backlground" instance=ExtResource( 28 )]
position = Vector2( 47.343, 190.725 )

[node name="godrays" type="ColorRect" parent="."]
visible = false
material = SubResource( 2 )
margin_left = -2587.0
margin_top = -2605.0
margin_right = 3825.0
margin_bottom = 112.0

[node name="invert-for-shrimp" type="ColorRect" parent="."]
visible = false
material = SubResource( 10 )
margin_left = -2617.0
margin_top = -2660.0
margin_right = 3764.0
margin_bottom = 40.0

[node name="TileMap" type="TileMap" parent="."]
tile_set = ExtResource( 1 )
cell_size = Vector2( 512, 512 )
format = 1
tile_data = PoolIntArray( -131073, 0, 0, -196608, 0, 0, -196607, 0, 0, -196606, 22, 0, -196605, 44, 0, -196604, 37, 0, -196603, 23, 0, -196602, 0, 0, -196601, 0, 0, -196600, 0, 0, -196599, 0, 0, -65537, 0, 0, -131072, 0, 0, -131071, 24, 0, -131070, 42, 0, -131067, 38, 0, -131066, 25, 0, -131065, 26, 0, -131064, 27, 0, -131063, 28, 0, -1, 0, 0, -65536, 29, 0, -65535, 39, 0, -65534, 45, 0, -65533, 46, 0, -65532, 43, 0, -65531, 41, 0, -65530, 30, 0, -65529, 0, 0, -65528, 0, 0, -65527, 0, 0, 65535, 0, 0, 0, 32, 0, 1, 36, 0, 2, 33, 0, 3, 34, 0, 4, 40, 0, 5, 47, 0, 6, 35, 0, 7, 0, 0, 131071, 0, 0, 65536, 0, 0, 65537, 0, 0, 65538, 0, 0, 65539, 0, 0, 65540, 0, 0, 65541, 0, 0, 65542, 0, 0, 65543, 0, 0 )

[node name="DoorTeleport" parent="." instance=ExtResource( 26 )]
position = Vector2( 4858.4, -716 )
